Current model: RandomForest
Current target variable: matched_to_tornado_0km
drop_correlated_features: True
***DROPPING CORRELATED FEATURES!***
Preload: True
Droppping 87 features ...

 Current fold:  0
Start Time:  23:14:43.535308
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:0_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:0_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:0_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  1
Start Time:  23:14:43.705296
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:1_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:1_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:1_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  2
Start Time:  23:14:43.980873
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:2_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:2_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:2_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  3
Start Time:  23:14:44.434167
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:3_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:3_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:3_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  4
Start Time:  23:14:44.815343
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:4_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:4_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:4_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  5
Start Time:  23:14:45.055335
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:5_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:5_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:5_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  6
Start Time:  23:14:45.294866
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:6_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:6_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:6_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  7
Start Time:  23:14:45.606825
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:7_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:7_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:7_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  8
Start Time:  23:14:45.868563
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:8_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:8_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:8_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  9
Start Time:  23:14:46.098514
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:9_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:9_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:9_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  10
Start Time:  23:14:46.330067
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:10_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:10_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:10_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  11
Start Time:  23:14:46.490639
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:11_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:11_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:11_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  12
Start Time:  23:14:46.693797
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:12_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:12_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:12_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  13
Start Time:  23:14:46.922661
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:13_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:13_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:13_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  14
Start Time:  23:14:47.068180
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:14_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:14_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:14_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Best Parameters for RandomForest: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
AUPRC across the validation folds: [0.24280304 0.24522467 0.24425639 0.24129549 0.24941523 0.25002537
 0.2456516  0.24111498 0.25033899 0.24857752 0.24798624 0.24079109
 0.25117091 0.25027996 0.24765069 0.24153142 0.25129496 0.2457309
 0.25134001 0.2421775  0.25383007 0.24940792 0.24898961 0.24112701
 0.25538078 0.24981105 0.2494657  0.24099152 0.25421734 0.24985225
 0.24888483 0.24300697 0.2511127  0.24570782 0.25140703 0.24218492
 0.25514876 0.24959754 0.24897442 0.24113258 0.25590906 0.25004821
 0.24947894 0.24100065 0.25486619 0.24996829 0.24879665 0.24302118
 0.25111266 0.24570782 0.25140703 0.24218492 0.25514876 0.24959754
 0.24897442 0.24113258 0.25590906 0.25004821 0.24947894 0.24100065
 0.25486619 0.24996829 0.24879665 0.24302118]
Current target variable: matched_to_severe_wind_0km
drop_correlated_features: True
***DROPPING CORRELATED FEATURES!***
Preload: True
Droppping 87 features ...

 Current fold:  0
Start Time:  23:33:36.929318
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:0_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:0_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:0_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  1
Start Time:  23:33:37.111628
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:1_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:1_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:1_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  2
Start Time:  23:33:37.362270
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:2_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:2_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:2_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  3
Start Time:  23:33:37.608887
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:3_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:3_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:3_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  4
Start Time:  23:33:37.860736
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:4_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:4_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:4_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  5
Start Time:  23:33:38.169848
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:5_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:5_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:5_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  6
Start Time:  23:33:38.401388
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:6_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:6_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:6_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  7
Start Time:  23:33:38.635500
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:7_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:7_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:7_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  8
Start Time:  23:33:38.932118
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:8_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:8_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:8_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  9
Start Time:  23:33:39.299479
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:9_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:9_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:9_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  10
Start Time:  23:33:39.645118
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:10_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:10_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:10_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  11
Start Time:  23:33:39.878790
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:11_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:11_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:11_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  12
Start Time:  23:33:40.156549
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:12_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:12_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:12_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  13
Start Time:  23:33:40.440619
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:13_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:13_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:13_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  14
Start Time:  23:33:40.610099
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:14_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:14_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:14_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Best Parameters for RandomForest: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
AUPRC across the validation folds: [0.31491081 0.31150041 0.30820102 0.30566987 0.31805535 0.31465491
 0.31123146 0.3084685  0.31854525 0.31451803 0.31367983 0.30978966
 0.31767553 0.31401036 0.31316598 0.30975192 0.3133342  0.31727526
 0.31793962 0.30894562 0.3237868  0.32423043 0.32051311 0.31385005
 0.32843955 0.3238369  0.32036874 0.31435071 0.32753857 0.32529029
 0.3211697  0.31410158 0.31189752 0.31894011 0.31751582 0.30876119
 0.32509042 0.32473422 0.32022412 0.31375891 0.32772642 0.32431114
 0.32017442 0.31431707 0.32779113 0.32562445 0.32099653 0.31408842
 0.31189752 0.31894011 0.31751582 0.30876119 0.32509042 0.32473422
 0.32022412 0.31375891 0.32772642 0.32431114 0.32017442 0.31431707
 0.32779113 0.32562445 0.32099653 0.31408842]
Current target variable: matched_to_severe_hail_0km
drop_correlated_features: True
***DROPPING CORRELATED FEATURES!***
Preload: True
Droppping 87 features ...

 Current fold:  0
Start Time:  00:07:29.804907
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:0_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:0_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:0_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  1
Start Time:  00:07:30.006381
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:1_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:1_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:1_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  2
Start Time:  00:07:30.262478
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:2_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:2_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:2_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  3
Start Time:  00:07:30.564081
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:3_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:3_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:3_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  4
Start Time:  00:07:30.804430
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:4_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:4_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:4_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  5
Start Time:  00:07:31.080954
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:5_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:5_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:5_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  6
Start Time:  00:07:31.392706
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:6_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:6_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:6_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  7
Start Time:  00:07:31.740257
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:7_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:7_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:7_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  8
Start Time:  00:07:32.049214
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:8_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:8_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:8_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  9
Start Time:  00:07:32.414116
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:9_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:9_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:9_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  10
Start Time:  00:07:32.781840
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:10_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:10_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:10_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  11
Start Time:  00:07:33.067078
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:11_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:11_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:11_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  12
Start Time:  00:07:33.326913
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:12_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:12_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:12_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  13
Start Time:  00:07:33.604707
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:13_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:13_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:13_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  14
Start Time:  00:07:33.849966
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:14_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:14_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:14_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 10, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': 40, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 100, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 300, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 500, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 15, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 25, 'criterion': 'entropy'}
Evaluating RandomForest with the following params: {'bootstrap': True, 'max_depth': None, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 50, 'criterion': 'entropy'}
Best Parameters for RandomForest: {'bootstrap': True, 'max_depth': 20, 'n_estimators': 750, 'max_features': 'log2', 'min_samples_leaf': 5, 'criterion': 'entropy'}
AUPRC across the validation folds: [0.37836506 0.37756878 0.37731473 0.37617358 0.37935831 0.37925007
 0.37960794 0.37680523 0.37968507 0.37869424 0.37971924 0.37785
 0.38082871 0.37916366 0.37982684 0.37743992 0.38280611 0.38483461
 0.38451522 0.37879238 0.38808735 0.38796431 0.38587235 0.38176362
 0.38874957 0.38877267 0.38668929 0.38199189 0.38961656 0.38930212
 0.38700835 0.38232937 0.37995451 0.38688915 0.38374561 0.37883191
 0.38753773 0.38887347 0.38556628 0.38177787 0.38880221 0.38947784
 0.38626114 0.38207289 0.38926106 0.38939446 0.38665544 0.38237748
 0.37995449 0.38688915 0.38374561 0.37883191 0.38753773 0.38887347
 0.38556628 0.38177787 0.38880221 0.38947784 0.38626114 0.38207289
 0.38926106 0.38939446 0.38665544 0.38237748]
Current model: XGBoost
Current target variable: matched_to_tornado_0km
drop_correlated_features: True
***DROPPING CORRELATED FEATURES!***
Preload: True
Droppping 87 features ...

 Current fold:  0
Start Time:  00:57:42.126735
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:0_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:0_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:0_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  1
Start Time:  00:57:42.323640
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:1_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:1_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:1_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  2
Start Time:  00:57:42.599844
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:2_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:2_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:2_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  3
Start Time:  00:57:43.037887
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:3_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:3_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:3_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  4
Start Time:  00:57:43.398350
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:4_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:4_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:4_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  5
Start Time:  00:57:43.582987
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:5_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:5_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:5_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  6
Start Time:  00:57:43.768080
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:6_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:6_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:6_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  7
Start Time:  00:57:44.036095
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:7_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:7_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:7_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  8
Start Time:  00:57:44.262807
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:8_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:8_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:8_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  9
Start Time:  00:57:44.473930
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:9_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:9_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:9_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  10
Start Time:  00:57:44.700852
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:10_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:10_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:10_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  11
Start Time:  00:57:44.849840
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:11_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:11_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:11_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  12
Start Time:  00:57:45.053331
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:12_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:12_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:12_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  13
Start Time:  00:57:45.278692
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:13_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:13_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:13_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  14
Start Time:  00:57:45.420423
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:14_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:14_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:14_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Best Parameters for XGBoost: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
AUPRC across the validation folds: [0.26256034 0.2563212  0.25682052 0.25064294 0.26256034 0.2563212
 0.25682052 0.25064294 0.26256034 0.2563212  0.25682052 0.25064294
 0.255246   0.25005947 0.25270216 0.25305542 0.255246   0.25005947
 0.25270216 0.25305542 0.255246   0.25005947 0.25270216 0.25305542
 0.24947927 0.24605727 0.24822389 0.24407735 0.24947927 0.24605727
 0.24822389 0.24407735 0.24947927 0.24605727 0.24822389 0.24407735
 0.24706271 0.23845211 0.24595336 0.23830751 0.24706271 0.23845211
 0.24595336 0.23830751 0.24706271 0.23845211 0.24595336 0.23830751
 0.26256034 0.2563212  0.25682052 0.25064294 0.26256034 0.2563212
 0.25682052 0.25064294 0.26256034 0.2563212  0.25682052 0.25064294
 0.255246   0.25005947 0.25270216 0.25305542 0.255246   0.25005947
 0.25270216 0.25305542 0.255246   0.25005947 0.25270216 0.25305542
 0.24947927 0.24605727 0.24822389 0.24407735 0.24947927 0.24605727
 0.24822389 0.24407735 0.24947927 0.24605727 0.24822389 0.24407735
 0.24706271 0.23845211 0.24595336 0.23830751 0.24706271 0.23845211
 0.24595336 0.23830751 0.24706271 0.23845211 0.24595336 0.23830751
 0.26256034 0.2563212  0.25682052 0.25064294 0.26256034 0.2563212
 0.25682052 0.25064294 0.26256034 0.2563212  0.25682052 0.25064294
 0.255246   0.25005947 0.25270216 0.25305542 0.255246   0.25005947
 0.25270216 0.25305542 0.255246   0.25005947 0.25270216 0.25305542
 0.24947927 0.24605727 0.24822389 0.24407735 0.24947927 0.24605727
 0.24822389 0.24407735 0.24947927 0.24605727 0.24822389 0.24407735
 0.24706271 0.23845211 0.24595336 0.23830751 0.24706271 0.23845211
 0.24595336 0.23830751 0.24706271 0.23845211 0.24595336 0.23830751
 0.26256034 0.2563212  0.25682052 0.25064294 0.26256034 0.2563212
 0.25682052 0.25064294 0.26256034 0.2563212  0.25682052 0.25064294
 0.255246   0.25005947 0.25270216 0.25305542 0.255246   0.25005947
 0.25270216 0.25305542 0.255246   0.25005947 0.25270216 0.25305542
 0.24947927 0.24605727 0.24822389 0.24407735 0.24947927 0.24605727
 0.24822389 0.24407735 0.24947927 0.24605727 0.24822389 0.24407735
 0.24706271 0.23845211 0.24595336 0.23830751 0.24706271 0.23845211
 0.24595336 0.23830751 0.24706271 0.23845211 0.24595336 0.23830751]
Current target variable: matched_to_severe_wind_0km
drop_correlated_features: True
***DROPPING CORRELATED FEATURES!***
Preload: True
Droppping 87 features ...

 Current fold:  0
Start Time:  02:00:16.024905
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:0_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:0_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:0_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  1
Start Time:  02:00:16.272222
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:1_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:1_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:1_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  2
Start Time:  02:00:16.568813
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:2_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:2_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:2_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  3
Start Time:  02:00:16.861688
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:3_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:3_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:3_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  4
Start Time:  02:00:17.172554
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:4_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:4_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:4_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  5
Start Time:  02:00:17.555567
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:5_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:5_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:5_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  6
Start Time:  02:00:17.835697
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:6_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:6_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:6_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  7
Start Time:  02:00:18.125810
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:7_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:7_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:7_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  8
Start Time:  02:00:18.515157
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:8_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:8_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:8_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  9
Start Time:  02:00:19.012415
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:9_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:9_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:9_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  10
Start Time:  02:00:19.470822
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:10_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:10_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:10_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  11
Start Time:  02:00:19.802735
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:11_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:11_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:11_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  12
Start Time:  02:00:20.192821
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:12_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:12_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:12_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  13
Start Time:  02:00:20.592605
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:13_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:13_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:13_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  14
Start Time:  02:00:20.836028
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:14_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:14_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:14_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Best Parameters for XGBoost: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
AUPRC across the validation folds: [0.34022382 0.33671217 0.33926422 0.33937256 0.34022382 0.33671217
 0.33926422 0.33937256 0.34022382 0.33671217 0.33926422 0.33937256
 0.33538473 0.3346001  0.33951005 0.33198141 0.33538473 0.3346001
 0.33951005 0.33198141 0.33538473 0.3346001  0.33951005 0.33198141
 0.33260265 0.32272382 0.32998888 0.32643633 0.33260265 0.32272382
 0.32998888 0.32643633 0.33260265 0.32272382 0.32998888 0.32643633
 0.32347498 0.32434374 0.32942651 0.32113465 0.32347498 0.32434374
 0.32942651 0.32113465 0.32347498 0.32434374 0.32942651 0.32113465
 0.34022382 0.33671217 0.33926422 0.33937256 0.34022382 0.33671217
 0.33926422 0.33937256 0.34022382 0.33671217 0.33926422 0.33937256
 0.33538473 0.3346001  0.33951005 0.33198141 0.33538473 0.3346001
 0.33951005 0.33198141 0.33538473 0.3346001  0.33951005 0.33198141
 0.33260265 0.32272382 0.32998888 0.32643633 0.33260265 0.32272382
 0.32998888 0.32643633 0.33260265 0.32272382 0.32998888 0.32643633
 0.32347498 0.32434374 0.32942651 0.32113465 0.32347498 0.32434374
 0.32942651 0.32113465 0.32347498 0.32434374 0.32942651 0.32113465
 0.34022382 0.33671217 0.33926422 0.33937256 0.34022382 0.33671217
 0.33926422 0.33937256 0.34022382 0.33671217 0.33926422 0.33937256
 0.33538473 0.3346001  0.33951005 0.33198141 0.33538473 0.3346001
 0.33951005 0.33198141 0.33538473 0.3346001  0.33951005 0.33198141
 0.33260265 0.32272382 0.32998888 0.32643633 0.33260265 0.32272382
 0.32998888 0.32643633 0.33260265 0.32272382 0.32998888 0.32643633
 0.32347498 0.32434374 0.32942651 0.32113465 0.32347498 0.32434374
 0.32942651 0.32113465 0.32347498 0.32434374 0.32942651 0.32113465
 0.34022382 0.33671217 0.33926422 0.33937256 0.34022382 0.33671217
 0.33926422 0.33937256 0.34022382 0.33671217 0.33926422 0.33937256
 0.33538473 0.3346001  0.33951005 0.33198141 0.33538473 0.3346001
 0.33951005 0.33198141 0.33538473 0.3346001  0.33951005 0.33198141
 0.33260265 0.32272382 0.32998888 0.32643633 0.33260265 0.32272382
 0.32998888 0.32643633 0.33260265 0.32272382 0.32998888 0.32643633
 0.32347498 0.32434374 0.32942651 0.32113465 0.32347498 0.32434374
 0.32942651 0.32113465 0.32347498 0.32434374 0.32942651 0.32113465]
Current target variable: matched_to_severe_hail_0km
drop_correlated_features: True
***DROPPING CORRELATED FEATURES!***
Preload: True
Droppping 87 features ...

 Current fold:  0
Start Time:  03:28:43.580040
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:0_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:0_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:0_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  1
Start Time:  03:28:43.844550
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:1_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:1_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:1_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  2
Start Time:  03:28:44.200625
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:2_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:2_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:2_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  3
Start Time:  03:28:44.595066
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:3_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:3_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:3_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  4
Start Time:  03:28:44.923493
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:4_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:4_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:4_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  5
Start Time:  03:28:45.278083
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:5_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:5_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:5_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  6
Start Time:  03:28:45.663610
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:6_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:6_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:6_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  7
Start Time:  03:28:46.092185
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:7_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:7_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:7_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  8
Start Time:  03:28:46.485780
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:8_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:8_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:8_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  9
Start Time:  03:28:46.953986
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:9_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:9_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:9_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  10
Start Time:  03:28:47.599685
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:10_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:10_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:10_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  11
Start Time:  03:28:47.979988
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:11_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:11_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:11_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  12
Start Time:  03:28:48.329164
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:12_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:12_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:12_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  13
Start Time:  03:28:48.702242
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:13_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:13_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:13_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed

 Current fold:  14
Start Time:  03:28:49.049457
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:14_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:14_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:14_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 100, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 200, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 500, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 6, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 8, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 10, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.01, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 0.8, 'random_state': 0, 'n_jobs': 40}
Evaluating XGBoost with the following params: {'nrounds': 750, 'max_depth': 15, 'eta': 0.1, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 1.0, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
Best Parameters for XGBoost: {'nrounds': 100, 'max_depth': 6, 'eta': 0.001, 'objective': 'binary:logistic', 'eval_metric': 'aucpr', 'colsample_bytree': 0.8, 'subsample': 1.0, 'random_state': 0, 'n_jobs': 40}
AUPRC across the validation folds: [0.39657236 0.39810759 0.39808943 0.3937189  0.39657236 0.39810759
 0.39808943 0.3937189  0.39657236 0.39810759 0.39808943 0.3937189
 0.39188852 0.38950454 0.38859905 0.38776356 0.39188852 0.38950454
 0.38859905 0.38776356 0.39188852 0.38950454 0.38859905 0.38776356
 0.38647684 0.38576201 0.38570682 0.38528193 0.38647684 0.38576201
 0.38570682 0.38528193 0.38647684 0.38576201 0.38570682 0.38528193
 0.38190953 0.38369207 0.38428337 0.38051087 0.38190953 0.38369207
 0.38428337 0.38051087 0.38190953 0.38369207 0.38428337 0.38051087
 0.39657236 0.39810759 0.39808943 0.3937189  0.39657236 0.39810759
 0.39808943 0.3937189  0.39657236 0.39810759 0.39808943 0.3937189
 0.39188852 0.38950454 0.38859905 0.38776356 0.39188852 0.38950454
 0.38859905 0.38776356 0.39188852 0.38950454 0.38859905 0.38776356
 0.38647684 0.38576201 0.38570682 0.38528193 0.38647684 0.38576201
 0.38570682 0.38528193 0.38647684 0.38576201 0.38570682 0.38528193
 0.38190953 0.38369207 0.38428337 0.38051087 0.38190953 0.38369207
 0.38428337 0.38051087 0.38190953 0.38369207 0.38428337 0.38051087
 0.39657236 0.39810759 0.39808943 0.3937189  0.39657236 0.39810759
 0.39808943 0.3937189  0.39657236 0.39810759 0.39808943 0.3937189
 0.39188852 0.38950454 0.38859905 0.38776356 0.39188852 0.38950454
 0.38859905 0.38776356 0.39188852 0.38950454 0.38859905 0.38776356
 0.38647684 0.38576201 0.38570682 0.38528193 0.38647684 0.38576201
 0.38570682 0.38528193 0.38647684 0.38576201 0.38570682 0.38528193
 0.38190953 0.38369207 0.38428337 0.38051087 0.38190953 0.38369207
 0.38428337 0.38051087 0.38190953 0.38369207 0.38428337 0.38051087
 0.39657236 0.39810759 0.39808943 0.3937189  0.39657236 0.39810759
 0.39808943 0.3937189  0.39657236 0.39810759 0.39808943 0.3937189
 0.39188852 0.38950454 0.38859905 0.38776356 0.39188852 0.38950454
 0.38859905 0.38776356 0.39188852 0.38950454 0.38859905 0.38776356
 0.38647684 0.38576201 0.38570682 0.38528193 0.38647684 0.38576201
 0.38570682 0.38528193 0.38647684 0.38576201 0.38570682 0.38528193
 0.38190953 0.38369207 0.38428337 0.38051087 0.38190953 0.38369207
 0.38428337 0.38051087 0.38190953 0.38369207 0.38428337 0.38051087]
Current model: LogisticRegression
Current target variable: matched_to_tornado_0km
drop_correlated_features: True
***DROPPING CORRELATED FEATURES!***
Preload: True
Droppping 87 features ...

 Current fold:  0
Start Time:  05:28:18.654159
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:0_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:0_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:0_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_tornado_0km_fold:0.joblib...

 Current fold:  1
Start Time:  05:28:18.915332
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:1_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:1_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:1_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_tornado_0km_fold:1.joblib...

 Current fold:  2
Start Time:  05:28:19.503001
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:2_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:2_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:2_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_tornado_0km_fold:2.joblib...

 Current fold:  3
Start Time:  05:28:20.322059
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:3_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:3_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:3_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_tornado_0km_fold:3.joblib...

 Current fold:  4
Start Time:  05:28:21.083625
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:4_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:4_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:4_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_tornado_0km_fold:4.joblib...

 Current fold:  5
Start Time:  05:28:21.417136
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:5_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:5_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:5_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_tornado_0km_fold:5.joblib...

 Current fold:  6
Start Time:  05:28:21.758882
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:6_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:6_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:6_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_tornado_0km_fold:6.joblib...

 Current fold:  7
Start Time:  05:28:22.206172
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:7_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:7_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:7_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_tornado_0km_fold:7.joblib...

 Current fold:  8
Start Time:  05:28:22.592627
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:8_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:8_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:8_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_tornado_0km_fold:8.joblib...

 Current fold:  9
Start Time:  05:28:22.947853
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:9_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:9_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:9_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_tornado_0km_fold:9.joblib...

 Current fold:  10
Start Time:  05:28:23.314700
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:10_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:10_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:10_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_tornado_0km_fold:10.joblib...

 Current fold:  11
Start Time:  05:28:23.559050
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:11_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:11_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:11_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_tornado_0km_fold:11.joblib...

 Current fold:  12
Start Time:  05:28:23.891831
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:12_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:12_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:12_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_tornado_0km_fold:12.joblib...

 Current fold:  13
Start Time:  05:28:24.254463
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:13_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:13_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:13_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_tornado_0km_fold:13.joblib...

 Current fold:  14
Start Time:  05:28:24.479631
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:14_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:14_t:first_hour_resampled_to_matched_to_tornado_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:14_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_tornado_0km_fold:14.joblib...
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Best Parameters for LogisticRegression: {'l1_ratio': 0.01, 'C': 0.01}
AUPRC across the validation folds: [0.26302707 0.25916486 0.2545708  0.25362176 0.25315834 0.26302864
 0.25916113 0.25458285 0.25362652 0.25314294 0.25928719 0.26192082
 0.25597699 0.25437107 0.25348274 0.24645543 0.26282278 0.25716793
 0.25502757 0.25383172]
Current target variable: matched_to_severe_wind_0km
drop_correlated_features: True
***DROPPING CORRELATED FEATURES!***
Preload: True
Droppping 87 features ...

 Current fold:  0
Start Time:  05:34:59.065651
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:0_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:0_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:0_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_wind_0km_fold:0.joblib...

 Current fold:  1
Start Time:  05:34:59.400001
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:1_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:1_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:1_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_wind_0km_fold:1.joblib...

 Current fold:  2
Start Time:  05:34:59.764926
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:2_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:2_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:2_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_wind_0km_fold:2.joblib...

 Current fold:  3
Start Time:  05:35:00.122060
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:3_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:3_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:3_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_wind_0km_fold:3.joblib...

 Current fold:  4
Start Time:  05:35:00.489081
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:4_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:4_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:4_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_wind_0km_fold:4.joblib...

 Current fold:  5
Start Time:  05:35:00.880459
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:5_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:5_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...Using TensorFlow backend.
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/utils/deprecation.py:144: FutureWarning: The sklearn.ensemble.forest module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.ensemble. Anything that cannot be imported from sklearn.ensemble is now part of the private API.
  warnings.warn(message, FutureWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)

Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:5_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_wind_0km_fold:5.joblib...

 Current fold:  6
Start Time:  05:35:01.200731
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:6_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:6_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:6_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_wind_0km_fold:6.joblib...

 Current fold:  7
Start Time:  05:35:01.541930
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:7_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:7_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:7_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_wind_0km_fold:7.joblib...

 Current fold:  8
Start Time:  05:35:01.928900
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:8_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:8_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:8_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_wind_0km_fold:8.joblib...

 Current fold:  9
Start Time:  05:35:02.445841
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:9_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:9_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:9_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_wind_0km_fold:9.joblib...

 Current fold:  10
Start Time:  05:35:02.920612
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:10_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:10_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:10_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_wind_0km_fold:10.joblib...

 Current fold:  11
Start Time:  05:35:03.245272
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:11_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:11_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:11_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_wind_0km_fold:11.joblib...

 Current fold:  12
Start Time:  05:35:03.662802
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:12_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:12_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:12_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_wind_0km_fold:12.joblib...

 Current fold:  13
Start Time:  05:35:04.067164
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:13_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:13_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:13_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_wind_0km_fold:13.joblib...

 Current fold:  14
Start Time:  05:35:04.328872
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:14_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:14_t:first_hour_resampled_to_matched_to_severe_wind_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:14_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_wind_0km_fold:14.joblib...
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Best Parameters for LogisticRegression: {'l1_ratio': 0.5, 'C': 0.1}
AUPRC across the validation folds: [0.33731466 0.33898074 0.33779172 0.33757515 0.33742934 0.3373124
 0.33897818 0.33779147 0.33757376 0.33743557 0.32889687 0.3401623
 0.33821295 0.33780061 0.33756778 0.32053836 0.33982356 0.33856629
 0.33801441 0.337662  ]
Current target variable: matched_to_severe_hail_0km
drop_correlated_features: True
***DROPPING CORRELATED FEATURES!***
Preload: True
Droppping 87 features ...

 Current fold:  0
Start Time:  05:47:22.990556
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:0_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:0_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:0_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_hail_0km_fold:0.joblib...

 Current fold:  1
Start Time:  05:47:23.407041
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:1_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:1_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:1_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_hail_0km_fold:1.joblib...

 Current fold:  2
Start Time:  05:47:23.883721
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:2_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:2_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:2_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_hail_0km_fold:2.joblib...

 Current fold:  3
Start Time:  05:47:24.328017
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:3_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:3_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:3_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_hail_0km_fold:3.joblib...

 Current fold:  4
Start Time:  05:47:24.702913
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:4_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:4_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:4_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_hail_0km_fold:4.joblib...

 Current fold:  5
Start Time:  05:47:25.096635
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:5_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:5_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:5_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_hail_0km_fold:5.joblib...

 Current fold:  6
Start Time:  05:47:25.507767
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:6_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:6_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:6_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_hail_0km_fold:6.joblib...

 Current fold:  7
Start Time:  05:47:25.994841
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:7_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:7_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:7_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_hail_0km_fold:7.joblib...

 Current fold:  8
Start Time:  05:47:26.438731
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:8_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:8_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:8_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_hail_0km_fold:8.joblib...

 Current fold:  9
Start Time:  05:47:26.972058
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:9_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:9_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:9_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_hail_0km_fold:9.joblib...

 Current fold:  10
Start Time:  05:47:27.547730
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:10_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:10_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:10_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_hail_0km_fold:10.joblib...

 Current fold:  11
Start Time:  05:47:27.989002
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:11_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:11_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:11_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_hail_0km_fold:11.joblib...

 Current fold:  12
Start Time:  05:47:28.401937
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:12_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:12_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:12_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_hail_0km_fold:12.joblib...

 Current fold:  13
Start Time:  05:47:28.834090
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:13_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:13_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:13_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_hail_0km_fold:13.joblib...

 Current fold:  14
Start Time:  05:47:29.239608
Loading the training dataframe from /work/mflora/ML_DATA/DATA/training/training_f:14_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the validation dataframe from /work/mflora/ML_DATA/DATA/validation/validation_f:14_t:first_hour_resampled_to_matched_to_severe_hail_0km_probability_objects.pkl...
Loading the testing dataframe from /work/mflora/ML_DATA/DATA/testing/testing_f:14_t:first_hour_raw_probability_objects.pkl...
self.opt: correlated_features_removed
Saving /work/mflora/ML_DATA/MODEL_SAVES/FCST_TIME_IDX=first_hour/LogisticRegression/model:LogisticRegression_norm_correlated_features_removed:matched_to_severe_hail_0km_fold:14.joblib...
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)
/home/monte.flora/.conda/envs/deep_learning/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:330: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)

Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.01, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 0.5, 'C': 2.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.01}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.1}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 0.5}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 1.0}
Evaluating LogisticRegression with the following params: {'l1_ratio': 1.0, 'C': 2.0}
Best Parameters for LogisticRegression: {'l1_ratio': 0.01, 'C': 0.1}
AUPRC across the validation folds: [0.38580455 0.38744758 0.38743419 0.3874228  0.38741724 0.38580447
 0.38744778 0.38743554 0.38742347 0.38741649 0.38072531 0.38717393
 0.38741125 0.38741612 0.3874224  0.37634689 0.3866924  0.38740687
 0.38741081 0.38740835]
